{"version":3,"file":"main.09e8aff9a6ea32d9930c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAEAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,YAAM;AAChD;AACA;AACA;AAEA,MAAIC,UAAU,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAjB;;AALgD,6CAMxBF,UANwB;AAAA;;AAAA;AAAA;AAAA,UAMrCG,SANqC;AAO9C,UAAIC,YAAY,GAAGD,SAAS,CAACE,SAAV,CAAoBC,QAApB,CAA6B,mBAA7B,CAAnB;AACAC,MAAAA,aAAa,CAACC,MAAd,CAAqB;AACnBC,QAAAA,OAAO,EAAEN,SADU;AAEnBO,QAAAA,KAAK,EAAE,SAFY;AAGnBC,QAAAA,OAAO,EAAE,IAHU;AAInBC,QAAAA,OAAO,EAAE;AAAA,iBAAMC,yBAAyB,CAACT,YAAD,EAAeD,SAAf,CAA/B;AAAA,SAJU;AAKnBW,QAAAA,IAAI,EAAE;AALa,OAArB;AAR8C;;AAMhD,wDAAoC;AAAA;AASnC,KAf+C,CAiBhD;;AAjBgD;AAAA;AAAA;AAAA;AAAA;;AAkBhD,WAASD,yBAAT,CAAmCE,IAAnC,EAAyCC,EAAzC,EAA6C;AAC3C,QAAID,IAAJ,EAAU;AACRC,MAAAA,EAAE,CAACX,SAAH,CAAaY,GAAb,CAAiB,oBAAjB;AACAD,MAAAA,EAAE,CAACE,IAAH,CAAQ,mBAAR,EAA6BC,MAA7B;AACAH,MAAAA,EAAE,CAACE,IAAH,CAAQ,mBAAR,EAA6BC,MAA7B;AACD,KAJD,MAKK;AACH,UAAIC,cAAc,8CAA2CJ,EAAE,CAACK,WAA9C,YAAlB;AAAA,UACIC,cAAc,8CAA2CN,EAAE,CAACK,WAA9C,YADlB;AAAA,UAEIE,oBAAoB,+CAAsCP,EAAE,CAACK,WAAzC,YAFxB;AAGAL,MAAAA,EAAE,CAACQ,SAAH,aAAkBD,oBAAlB,SAAyCH,cAAzC,SAA0DE,cAA1D;AACAG,MAAAA,0BAA0B,CAACV,IAAD,EAAOC,EAAP,CAA1B;AACD;AACF,GA/B+C,CAiChD;;;AACA,WAASS,0BAAT,CAAoCV,IAApC,EAA0CC,EAA1C,EAA8C;AAC5C,QAAI,CAACD,IAAL,EAAW;AACT,UAAIW,iBAAiB,GAAGzB,QAAQ,CAAC0B,aAAT,CAAuB,mBAAvB,CAAxB;AAAA,UACIC,iBAAiB,GAAG3B,QAAQ,CAAC0B,aAAT,CAAuB,mBAAvB,CADxB;AAEA,UAAIE,UAAU,GAAGb,EAAE,CAACc,YAApB;AAAA,UACIC,SAAS,GAAIf,EAAE,CAACgB,WADpB;AAEA,UAAIC,gBAAgB,0BAAoBJ,UAApB,YAApB;AAAA,UACIK,iBAAiB,sBAAeH,SAAf,gBAA8BF,UAA9B,WADrB;AAAA,UAEIM,gBAAgB,sBAAgBJ,SAAhB,gBAA+BF,UAA/B,WAFpB;AAAA,UAGIO,iBAAiB,sBAAeL,SAAf,gBAA8BF,UAA9B,gBAA8CE,SAA9C,OAHrB;AAIAL,MAAAA,iBAAiB,CAACW,KAAlB,CAAwBC,IAAxB,GAA+BL,gBAA/B;AACAL,MAAAA,iBAAiB,CAACS,KAAlB,CAAwBC,IAAxB,GAA+BH,gBAA/B;AACAnB,MAAAA,EAAE,CAACX,SAAH,CAAaY,GAAb,CAAiB,mBAAjB,EAXS,CAYT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF;AAEF,CA/DD,EA+DG,KA/DH;;;;;;;;UCFA,qCAAqC","sources":["webpack:///./src/assets/js/index.js","webpack:///webpack/runtime/getFullHash"],"sourcesContent":["import  '../scss/style.scss';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  // Get DOM Element\n  // let titEffect    = document.querySelector('.titEffect');\n  // let isTitVisible = titEffect.classList.contains('titEffect-visible');\n\n  let titEffects = document.getElementsByClassName('titEffect');\n  for (const titEffect of titEffects) {\n    let isTitVisible = titEffect.classList.contains('titEffect-visible');\n    ScrollTrigger.create({\n      trigger: titEffect,\n      start: 'top 90%',\n      markers: true,\n      onEnter: () => creareNewTitEffectContent(isTitVisible, titEffect),\n      once: true,\n    });\n  }\n\n  // Create New DOM Content\n  function creareNewTitEffectContent(bool, el) {\n    if (bool) {\n      el.classList.add('titEffect-animated');\n      el.find('.titEffect__clone').remove();\n      el.find('.titEffect__cover').remove();\n    }\n    else {\n      let titEffectClone       = `<span class=\"titEffect__clone\">${el.textContent}</span>`,\n          titEffectCover       = `<span class=\"titEffect__cover\">${el.textContent}</span>`,\n          titEffectDuplication = `<span class=\"titEffect__detail\">${el.textContent}</span>`;\n      el.innerHTML = `${titEffectDuplication}${titEffectClone}${titEffectCover}`;\n      animateNewTitEffectContent(bool, el);\n    }\n  }\n\n  // Animate New DOM Content\n  function animateNewTitEffectContent(bool, el) {\n    if (!bool) {\n      let newTitEffectClone = document.querySelector('.titEffect__clone'),\n          newTitEffectCover = document.querySelector('.titEffect__cover');\n      let elemHeight = el.offsetHeight,\n          elemWidth  = el.offsetWidth;\n      let initialCloneRect  = `rect(0px 0px ${elemHeight}px 0px)`,\n          archivedCloneRect = `rect(0px ${elemWidth}px ${elemHeight}px 0px`,\n          initialCoverRect  = `rect(0px ${elemWidth}px ${elemHeight}px 0px`,\n          archivedCoverRect = `rect(0px ${elemWidth}px ${elemHeight}px ${elemWidth}px`;\n      newTitEffectClone.style.clip = initialCloneRect;\n      newTitEffectCover.style.clip = initialCoverRect;\n      el.classList.add('titEffect-visible');\n      // gsap.to(newTitEffectClone, 1.5, {\n      //   clip: archivedCloneRect,\n      //   ease: Power3.easeOut,\n      // })\n      // gsap.to(newTitEffectCover, 1.5, {\n      //   clip: archivedCoverRect,\n      //   ease: Power3.easeOut,\n      //   onComplete: () => {\n      //     el.classList.add('titEffect-animated'),\n      //     newTitEffectClone.remove(),\n      //     newTitEffectCover.remove()\n      //   }\n      // })\n    }\n  }\n\n}, false)","__webpack_require__.h = function() { return \"21bf93653fad04186a98\"; }"],"names":["window","addEventListener","titEffects","document","getElementsByClassName","titEffect","isTitVisible","classList","contains","ScrollTrigger","create","trigger","start","markers","onEnter","creareNewTitEffectContent","once","bool","el","add","find","remove","titEffectClone","textContent","titEffectCover","titEffectDuplication","innerHTML","animateNewTitEffectContent","newTitEffectClone","querySelector","newTitEffectCover","elemHeight","offsetHeight","elemWidth","offsetWidth","initialCloneRect","archivedCloneRect","initialCoverRect","archivedCoverRect","style","clip"],"sourceRoot":""}